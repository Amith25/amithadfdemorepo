{
	"name": "pl_assign3",
	"properties": {
		"activities": [
			{
				"name": "LkpJsonFile",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "json_dataset_as3",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "FlMissIdRecords",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "LkpJsonFile",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().id,'')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEachMissId",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "FlMissIdRecords",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter1').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "SqlServerSink",
									"tableOption": "autoCreate"
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "RestApi",
									"type": "DatasetReference",
									"parameters": {
										"title_miss": {
											"value": "@item().title",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "amith_db",
									"type": "DatasetReference",
									"parameters": {
										"tb_name": "assign3"
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "df_ID_present",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "ForEachMissId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "dataflow3",
						"type": "DataFlowReference",
						"datasetParameters": {
							"sink1": {
								"tb_name": "assign3"
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"folder": {
			"name": "assignment 3"
		},
		"annotations": []
	}
}